@page "/Dashboard"
@using System.Text.Json
@using System.Net
@using System.Net.Http.Headers
@using System.Runtime.InteropServices.JavaScript
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using MudBlazor
@layout MainLayout
@inject HttpClient HttpClient;
@using Notes_App_Frontend.Components
@using Notes_App_Frontend.Models

<PageTitle>Index</PageTitle>
<MudLayout>
      <MudAppBar Elevation="1">
           <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
           <MudSpacer />
           <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor" Target="_blank" />
       </MudAppBar>
       <MudDrawer @bind-Open="@open" Elevation="1">
           <MudDrawerHeader>
               <MudText Typo="Typo.h6">My App</MudText>
           </MudDrawerHeader>
           <MudNavMenu>
               <MudStack>
                   <MudNavLink Match="NavLinkMatch.All" Href="/sfddsf">
                       <MudText Align="Align.Start" Typo="Typo.body2">Dashboard</MudText>
                   </MudNavLink>
                   <MudStack AlignItems="AlignItems.Start" Class="pl-3 pt-n2">
                       <MudCheckBox @bind-Checked="FavoritesOnly" LabelPosition="LabelPosition.Start">
                           <MudText Typo="Typo.body2">Favorites only</MudText>
                       </MudCheckBox>
                   </MudStack>
                   <MudText Typo="Typo.body2" Class="pl-7">Labels:</MudText>
                   <MudStack Class="pl-9"AlignItems="AlignItems.Start">
                 
                   </MudStack>
               <MudNavLink Match="NavLinkMatch.All" Href="/settings">
                   <MudText Align="Align.Start" Typo="Typo.body2">Settings</MudText>
               </MudNavLink>
               </MudStack>
               
              
           </MudNavMenu>
       </MudDrawer>
       <MudMainContent Class="pt-16 px-0">

    <MudText Class="pt-5"Typo="Typo.h4">My Notes</MudText>
    <MudSpacer></MudSpacer>

           <MudGrid Class="pt-5" Spacing="2" Justify="Justify.FlexStart">
               
               @foreach (NotesViewModel note in notes)
               {
                   if (FavoritesOnly && note.Favorite || FavoritesOnly == false)
                   {
                       <SimpleNote Note="note"></SimpleNote> 
                   }
                   
               }
               
           </MudGrid>
           
       </MudMainContent>
</MudLayout>


@code
{
    public bool Basic_CheckBox1 { get; set; } = true;
    bool open = true;

    private void EventFinished(int test)
    {
        Console.WriteLine("We're done!"+ test);
    }
    
    void ToggleDrawer()
    {
        open = !open;
    }
    
    public bool FavoritesOnly { get; set; }
    
    public IEnumerable<NotesViewModel> notes;
    

    protected override void OnInitialized()
    {
        notes = new List<NotesViewModel>
        {
            new() {Id = 1, Title = "CPA", Text = "asdfgh", Favorite = true, Edited = DateTime.Now, Labels = new ()},
            new() {Id = 2, Title = "asd", Text = "deddede", Edited = DateTime.Now, Labels = new (){"work"}},
            new() {Id = 3, Title = "wer", Text = "gbgvbg", Edited = DateTime.Now, Labels = new(){"travel"}},
            new() {Id = 4, Title = "ert", Text = "asrfrr", Favorite = true, Edited = DateTime.Now, Labels = new() {"work","travel"}},
            
        };
        
    }

  
    
    public bool Favorites { get; set; } = false;
    [Inject] //f√ºr alle Tabs im Browser
    private ProtectedLocalStorage BrowserSettings { get; set; }
    
    //Lokal nur ein Fenster (username und Passwort (beim Nutzer Hashen) speichern) und wenn Token abgelaufen ist, dann neues Token anfordern
    ////private ProtectedSessionStorage
    
   
    



}