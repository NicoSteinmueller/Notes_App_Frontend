@page "/Dashboard"
@using System.Text.Json
@using System.Net
@using System.Net.Http.Headers
@using System.Runtime.InteropServices.JavaScript
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using MudBlazor
@layout MainLayout
@inject HttpClient HttpClient;
@inject IMenuSettings MenuSettings;
@inject INoteService NoteService
@inject IUser User;
@using Notes_App_Frontend.Components
@using Notes_App_Frontend.Models
@using Notes_App_Frontend.Service

<PageTitle>Index</PageTitle>
<MudLayout>
      
       <MudMainContent Class="pt-16 px-0">

    <MudText Class="pt-5"Typo="Typo.h4">My Notes</MudText>
    <MudSpacer></MudSpacer>

           <MudGrid Class="pt-5" Spacing="2" Justify="Justify.FlexStart">
               
               @foreach (NoteShort note in User.NotesShort)
               {
                   if (MenuSettings.FavoritesOnly && note.Favorite || MenuSettings.FavoritesOnly == false)
                   {
                       <SimpleNote Note="note"></SimpleNote> 
                   }
                   
               }
               
           </MudGrid>
           
       </MudMainContent>
</MudLayout>


@code
{

    bool open = true;

    private void EventFinished(int test)
    {
        Console.WriteLine("We're done!"+ test);
    }
    
    void ToggleDrawer()
    {
        open = !open;
    }
    


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            User.NotesShort = await NoteService.GetAllNotesShort();
            StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {

        
    }

    
    [Inject] //f√ºr alle Tabs im Browser
    private ProtectedLocalStorage BrowserSettings { get; set; }
    
    //Lokal nur ein Fenster (username und Passwort (beim Nutzer Hashen) speichern) und wenn Token abgelaufen ist, dann neues Token anfordern
    ////private ProtectedSessionStorage
    
   
    



}