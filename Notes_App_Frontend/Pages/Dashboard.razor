@page "/Dashboard"
@using System.Text.Json
@using System.Net
@using System.Net.Http.Headers
@using System.Runtime.InteropServices.JavaScript
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using MudBlazor
@layout MainLayout
@inject HttpClient HttpClient;
@inject IMenuSettings MenuSettings;
@using Notes_App_Frontend.Components
@using Notes_App_Frontend.Models

<PageTitle>Index</PageTitle>
<div class="z-0"><MudImage Class="dashboardImage z-0" Src="Images/Dashboard.jpg"  />
<style>
   .dashboardImage{
   position: fixed;
   width: 100vw; 
       top: 0;
       left: 0;
       height:100vh;
       z-index: 0;
     
   } 
</style>
</div>
<MudLayout>
      
       <MudMainContent Class="pt-16 px-0">

    <MudText Class="pt-5"Typo="Typo.h4">My Notes</MudText>
    <MudSpacer></MudSpacer>

           <MudGrid Class="pt-5" Spacing="2" Justify="Justify.FlexStart">
               
               @foreach (NotesViewModel note in notes)
               {
                   if (MenuSettings.FavoritesOnly && note.Favorite || MenuSettings.FavoritesOnly == false)
                   {
                       <SimpleNote Note="note"></SimpleNote> 
                   }
                   
               }
               
           </MudGrid>
           
       </MudMainContent>
</MudLayout>


@code
{
    public bool Basic_CheckBox1 { get; set; } = true;
    bool open = true;

    private void EventFinished(int test)
    {
        Console.WriteLine("We're done!"+ test);
    }
    
   
    
    
    public IEnumerable<NotesViewModel> notes;
    

    protected override void OnInitialized()
    {
        notes = new List<NotesViewModel>
        {
            new() {Id = 1, Title = "CPA", Text = "asdfgh", Favorite = true, Edited = DateTime.Now, Labels = new ()},
            new() {Id = 2, Title = "asd", Text = "deddede", Edited = DateTime.Now, Labels = new (){"work"}},
            new() {Id = 3, Title = "wer", Text = "gbgvbg", Edited = DateTime.Now, Labels = new(){"travel"}},
            new() {Id = 4, Title = "ert", Text = "asrfrr", Favorite = true, Edited = DateTime.Now, Labels = new() {"work","travel"}},
            
        };
        
    }

    
    [Inject] //f√ºr alle Tabs im Browser
    private ProtectedLocalStorage BrowserSettings { get; set; }
    
    //Lokal nur ein Fenster (username und Passwort (beim Nutzer Hashen) speichern) und wenn Token abgelaufen ist, dann neues Token anfordern
    ////private ProtectedSessionStorage
    
   
    



}