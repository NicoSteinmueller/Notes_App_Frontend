@page "/settings"
@using System.Text.Json
@using System.Net
@using System.Net.Http.Headers
@using System.Runtime.InteropServices.JavaScript
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using MudBlazor
@layout MainLayout
@inject HttpClient HttpClient;

<PageTitle>Settings</PageTitle>
<MudLayout>
      <MudAppBar Elevation="1">
           <MudIconButton Icon="@Icons.Material.Filled.Menu"  Edge="Edge.Start" OnClick="@ToggleDrawer" />
           <MudSpacer />
           <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor" Target="_blank" />
       </MudAppBar>
       <MudDrawer @bind-Open="@open" Elevation="1">
           <MudDrawerHeader>
               <MudText Typo="Typo.h6">My App</MudText>
           </MudDrawerHeader>
           <MudNavMenu>
               <MudNavLink Match="NavLinkMatch.All" Href="/sfddsf">Dashboard</MudNavLink>
               <MudNavLink Match="NavLinkMatch.All" Href="/settings">Settings</MudNavLink>
           </MudNavMenu>
       </MudDrawer>
       <MudMainContent Class="pt-20 px-0">
          
               
           <MudText Class="pt-5"Typo="Typo.h4">Settings</MudText>
           
           <MudStack Class="pt-5" AlignItems="AlignItems.Start">
               <MudSwitch LabelPosition="LabelPosition.Start" Color="Color.Primary"  T="bool" Label="Toggle Light/Dark Mode"/>
           </MudStack>
               <MudMenu Class="pl-2" Label="Choose Language" >
                   @foreach (Language language in languages)
                   {
                       <MudMenuItem>@language.Name</MudMenuItem>
                   }

               </MudMenu>
             
          

</MudMainContent>
</MudLayout>
@code
{
    bool open = true;
    
    
    
   

    void ToggleDrawer()
    {
        open = !open;
    }

    [Inject] //für alle Tabs im Browser
    private ProtectedLocalStorage BrowserSettings { get; set; }

    //Lokal nur ein Fenster (username und Passwort (beim Nutzer Hashen) speichern) und wenn Token abgelaufen ist, dann neues Token anfordern
    ////private ProtectedSessionStorage

    public record Language(string Name);
    public IEnumerable<Language> languages;

    protected override void OnInitialized()
    {
        
        languages = new List<Language>
        {
            new Language("German"),
            new Language("English")
        };
    }

    
    




}




    



