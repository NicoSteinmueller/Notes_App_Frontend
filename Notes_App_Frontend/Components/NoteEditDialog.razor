@using MudBlazor
@using Notes_App_Frontend.Models
@using Notes_App_Frontend.Pages


<h3>Component</h3>



<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            @Note.Title
        </MudText>
    </TitleContent>
    
    <DialogContent>
        <MudSelect MultiSelection="true" T="string" @bind-SelectedValues="options" @bind-Value="_selectedLabel" Label="Label" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
            @foreach (string note in Labels)
            {
                <MudSelectItem T="string" Value="note"/>
            }
        </MudSelect>
        <MudTextField T="string" Label="Multiline" Variant="Variant.Text" @bind-Value="@_sampleText" Lines="20" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="SaveChanges">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public NotesViewModel Note { get; set; }

    private string _sampleText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";

    private IEnumerable<string> options { get; set; } = new HashSet<string>();
    
    public List<string> Labels { get; set; }

    private string _selectedLabel = "";
    protected override void OnParametersSet()
    {
        _sampleText = Note.Text;
        Labels = new() { "work", "travel", "exploring", "football" };
        foreach (var label in Note.Labels)
        {
            options = options.Append(label);
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void SaveChanges()
    {
        Note.Labels.Clear();
        foreach (var option in options)
        {
            
            Note.Labels.Add(option);
        }
        MudDialog.Close(DialogResult.Ok(true));
    }
    
}