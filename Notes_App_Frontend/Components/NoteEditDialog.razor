@using MudBlazor
@using Notes_App_Frontend.Models
@using Notes_App_Frontend.Pages
@using Notes_App_Frontend.Service
@inject INoteService NoteService
@inject ISnackbar Snackbar;


<MudDialog FullWidth="true" MaxWidth="MaxWidth.Medium" >
    <TitleContent>
        <MudTextField T="string" Typo="Typo.h6" Variant="Variant.Text" @bind-Value="@Note.Title" Lines="1"/>
    </TitleContent>
    
    <DialogContent >

        <MudTextField T="string" Label="Text" Variant="Variant.Text" @bind-Value="@Note.Text" Lines="20" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="SaveChanges">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public Note Note { get; set; }

    
    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async void SaveChanges()
    {
        var saveResult = await NoteService.SaveNote(Note);
        if (saveResult.ID.Length == 0)
        {
            Snackbar.Add("Note don't save!", Severity.Error);
        }
        else
        {
            Snackbar.Add("Note saved!", Severity.Success);
            Note = saveResult;
            DialogResult.Ok(true);
        } 
        //MudDialog.Close(DialogResult.Ok(true));
    }
    
}